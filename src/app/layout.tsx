// Di Next.js (App Router / app/ directory), 
// layout adalah komponen khusus yang digunakan untuk membuat struktur UI yang konsisten di seluruh halaman.

// Contoh penggunaannya:
// Header & Footer yang sama di semua halaman
// Sidebar yang tetap ada meskipun halaman berpindah
// Tema global atau provider (misalnya Redux, Theme Provider, dsb.)

// ðŸ”¹ Karakteristik Layout
// Didefinisikan di app/layout.js atau app/layout.tsx
// Wajib ada minimal satu layout.js di root app/
// Bisa ada nested layout di dalam folder lain (misalnya app/dashboard/layout.js)
// Persisten antar navigasi
// Komponen layout tidak di-remount saat berpindah halaman di dalam layout yang sama â†’ artinya lebih hemat performa.
// Bisa bersarang (nested)
// Setiap folder bisa punya layout.js sendiri, dan akan mewarisi layout parent.




import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
	title: {
		template: '%s | AKM',
		default: 'lorem ipsum',
	},
	description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >

        <h2>header</h2>
        {children}
        <h2>footer</h2>
      </body>
    </html>
  );
}
